<?php

namespace AppBundle\Repository;

use DateTime;

/**
 * VentilationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VentilationRepository extends \Doctrine\ORM\EntityRepository {
    /*
     * FONCTION :
     */

    public function findAllTempsPasseeVentilation($user, $id) {

        $dateless = new \DateTime("-1 day");
        $datemore = new \DateTime("+1 day");


        return $this->createQueryBuilder('t')
                        ->join("t.formulaire", "f")
                        ->where("t.formulaire = f.id")
                        ->where("t.utilisateur = ?1")
                        ->andWhere("t.dateSaisie > ?2")
                        ->andWhere("t.dateSaisie < ?3")
                        ->andWhere("f.type_activite = ?4")
                        ->setParameter(1, $user->getId())
                        ->setParameter(2, $dateless)
                        ->setParameter(3, $datemore)
                        ->setParameter(4, $id)
                        ->getQuery()
                        ->getResult();
    }

    public function findByNotValidationAndDateMax($dateFin) {
        return $this->createQueryBuilder('t')
                        ->where("t.validation = ?1")
                        ->andWhere("t.dateSaisie < ?2")
                        ->setParameter(1, false)
                        ->setParameter(2, $dateFin)->getQuery()
                        ->getResult();
    }

    public function findByNotValidationAndDateMin($dateDebut) {
        return $this->createQueryBuilder('t')
                        ->where("t.validation = ?1")
                        ->andWhere("t.dateSaisie > ?2")
                        ->setParameter(1, false)
                        ->setParameter(2, $dateDebut)
                        ->getQuery()->getResult();
    }

    public function findByAllDateMax($dateFin) {
        return $this->createQueryBuilder('t')
                 ->where("t.validation = ?1")
        ->andWhere("t.dateSaisie < ?2")
        ->setParameter(1, true)
        ->setParameter(2, $dateFin)->getQuery()
        ->setMaxResults(1000)
        ->getResult();
    }

}
